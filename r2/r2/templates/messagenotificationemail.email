## The contents of this file are subject to the Common Public Attribution
## License Version 1.0. (the "License"); you may not use this file except in
## compliance with the License. You may obtain a copy of the License at
## http://code.reddit.com/LICENSE. The License is based on the Mozilla Public
## License Version 1.1, but Sections 14 and 15 have been added to cover use of
## software over a computer network and provide for limited attribution for the
## Original Developer. In addition, Exhibit A has been modified to be
## consistent with Exhibit B.
##
## Software distributed under the License is distributed on an "AS IS" basis,
## WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
## the specific language governing rights and limitations under the License.
##
## The Original Code is reddit.
##
## The Original Developer is the Initial Developer.  The Initial Developer of
## the Original Code is reddit Inc.
##
## All portions of the code written by reddit are Copyright (c) 2006-2014
## reddit Inc. All Rights Reserved.
###############################################################################

<%!
  from r2.lib.filters import unsafe
  from r2.lib.template_helpers import update_query
  from r2.lib.utils import UrlParser
%>

<%def name="parse_url(base_url, base_query, custom_queries=None)">
  <% 
    url = UrlParser(base_url)
    url.update_query(**base_query)
    if custom_queries:
      url.update_query(**custom_queries)
    url = url.unparse()
  %>
  ${url}
</%def>

You have ${thing.message_count} new ${'messages' if thing.message_count > 1 else 'message'} in your Reddit Inbox: ${parse_url(thing.inbox_url, thing.base_utm_query, {'utm_term': 'inbox_link'})}

%for index, message in enumerate(thing.messages):
  %if message["message_type"] == "message":
    Private message from ${message['author_name']}
    View: ${parse_url(message['permalink'], thing.base_utm_query, {'utm_content': 'private_message', 'utm_term':index})}
    ${unsafe(message["subject"])}

  %elif message["message_type"] == "post reply":
    Post reply from ${message['author_name']}
    View: ${parse_url(message['permalink'], thing.base_utm_query, {'utm_content': 'post_reply', 'utm_term':index, 'context':3})}

  %elif message["message_type"] == "comment reply":
    Comment reply from ${message['author_name']}
    View: ${parse_url(message['permalink'], thing.base_utm_query, {'utm_content': 'comment_reply', 'utm_term':index, 'context':3})}

  %elif message["message_type"] == "username notification":
    ${message['author_name']} mentioned you in a thread
    View: ${parse_url(message['permalink'], thing.base_utm_query, {'utm_content': 'username_mention', 'utm_term':index, 'context':3})}
  %endif

  ${unsafe(message["body"])}

%endfor

%if thing.more_unread_messages:
  An additional ${thing.message_count - thing.max_message_display_count} unread ${'messages' if (thing.message_count - thing.max_message_display_count > 1) else 'message'} from ${thing.non_preview_usernames_str} ${'are' if (thing.message_count - thing.max_message_display_count > 1) else 'is'} also in your Inbox.
%endif

Go to Reddit Inbox: ${parse_url(message['permalink'], thing.base_utm_query, {'utm_term':'inbox_button'})}

If you would not like to receive emails from Reddit in the future, unsubscribe here: ${parse_url(thing.unsubscribe_link, thing.base_utm_query, {'utm_term':'unsubscribe'})}
Reddit Inc.: ${unsafe("https://www.google.com/maps/place/548+Market+St,+San+Francisco,+CA+94104/@37.790002,-122.4009435,17z/data=!3m1!4b1!4m2!3m1!1s0x808580627b5ea1d1:0x60fd99496057cf74")}

548 Market St #16093, San Francisco, CA 94104-5401, United States
